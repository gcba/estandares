{"componentChunkName":"component---src-components-layout-tsx","path":"/herramientas_y_recursos/iconos/","result":{"pageContext":{"menu":"Íconos","title":"Íconos","description":"Conocé las familia de íconos de Obelisco para los productos digitales de GCBA.","position":3,"draft":null,"url":"/herramientas_y_recursos/iconos/","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"menu\": \"Íconos\",\n  \"title\": \"Íconos\",\n  \"description\": \"Conocé las familia de íconos de Obelisco para los productos digitales de GCBA.\",\n  \"position\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Row = makeShortcode(\"Row\");\nvar Col = makeShortcode(\"Col\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"documentación\"\n  }, \"Documentaci\\xF3n\"), mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Col, {\n    items: 2,\n    mdxType: \"Col\"\n  }, mdx(\"a\", {\n    className: \"card card-horizontal\",\n    href: \"https://fonts.google.com/icons?selected=Material+Icons+Round\"\n  }, mdx(\"i\", {\n    className: \"bx bx-link-external card-icon-left\"\n  }), mdx(\"div\", {\n    className: \"card-body\"\n  }, mdx(\"h4\", {\n    className: \"card-title\"\n  }, \"Material Icons\"), mdx(\"p\", {\n    className: \"card-text\"\n  }, \"Acceso a librer\\xEDa\"))))), mdx(\"h2\", {\n    \"id\": \"características-principales\"\n  }, \"Caracter\\xEDsticas principales\"), mdx(\"p\", null, \"Por definici\\xF3n, siempre se debe utilizar la librer\\xEDa de Material Icons y se debe cumplir con 2 caracter\\xEDsticas principales:\"), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), mdx(\"strong\", {\n    parentName: \"div\"\n  }, \"Tienen que ser \\u201Crounded\\u201D\"), \", es decir su morfolog\\xEDa esta definida por tener bordes redondeados. Siempre van a estar compuestos por una class=\\\"material-icons-round\\\". \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), mdx(\"strong\", {\n    parentName: \"div\"\n  }, \"Siempre tienen que ser s\\xF3lidos o rellenos\"), \". No utilizar \\xEDconos \\u201Coutline\\u201D o con borde. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"h2\", {\n    \"id\": \"otras-librerías\"\n  }, \"Otras librer\\xEDas\"), mdx(\"p\", null, \"En el caso de no encontrar un \\xEDcono en Material Icon se puede recurrir a utilizar otras librer\\xEDas, como por ejemplo la de \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://boxicons.com/\"\n  }), \"Boxicons\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"siempre y cuando respete los dos principios: \\xEDconos con bordes redondeados e \\xEDconos s\\xF3lidos o rellenos\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#documentación","title":"Documentación"},{"url":"#características-principales","title":"Características principales"},{"url":"#otras-librerías","title":"Otras librerías"}]}}}}