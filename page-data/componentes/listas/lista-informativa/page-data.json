{"componentChunkName":"component---src-components-layout-tsx","path":"/componentes/listas/lista-informativa/","result":{"pageContext":{"menu":"Lista informativa","title":"Lista informativa","description":"Las listas informativas organizan piezas simples de información en forma vertical. Se utilizan cuando sus elementos no transmiten un orden secuencial específico.","position":3,"draft":null,"url":"/componentes/listas/lista-informativa/","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"menu\": \"Lista informativa\",\n  \"title\": \"Lista informativa\",\n  \"description\": \"Las listas informativas organizan piezas simples de información en forma vertical. Se utilizan cuando sus elementos no transmiten un orden secuencial específico.\",\n  \"position\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"tipos-de-lista-informativa\"\n  }, \"Tipos de lista informativa\"), mdx(\"p\", null, \"Las listas aportan claridad y estructura a la presentaci\\xF3n de los contenidos. A su vez, organizan la informaci\\xF3n de forma fluida y visualmente atractiva. Este componente mejora la experiencia de la persona usuaria promoviendo el escaneo de la informaci\\xF3n clave y su efectiva comprensi\\xF3n.\"), mdx(\"div\", {\n    className: \"content-row flex-lg-nowrap\"\n  }, mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-1.svg\",\n    alt: \"Lista informativa\"\n  }), mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-2.svg\",\n    alt: \"Lista informativa\"\n  })), mdx(\"h2\", null, \"Tipos de \\xEDtems\"), mdx(\"p\", null, \"Las listas informativas presentan dos tipos de \\xEDtems: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"con vi\\xF1eta y con check\"), \". Los primeros se utilizan para transmitir informaci\\xF3n general, y los segundos se utilizan espec\\xEDficamente para requisitos. \"), mdx(\"div\", {\n    className: \"content-row\"\n  }, mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-3.svg\",\n    alt: \"Lista informativa\"\n  })), mdx(\"h2\", {\n    \"id\": \"diseño-y-estructura-contexto-de-uso\"\n  }, \"Dise\\xF1o y estructura (contexto de uso)\"), mdx(\"p\", null, \"La lista informativa se compone de un subt\\xEDtulo y de una serie de \\xEDtems organizados verticalmente, separados por un espaciado determinado para facilitar la lectura. Los \\xEDtems pueden contener enlaces de texto en caso de ser necesario. En desktop, el ancho m\\xE1ximo de la lista es de 8 columnas, y en mobile ocupa todas las columnas. \"), mdx(\"div\", {\n    className: \"content-row\"\n  }, mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-6.svg\",\n    alt: \"Lista informativa\"\n  })), mdx(\"div\", {\n    className: \"content-row flex-lg-nowrap\"\n  }, mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-4.svg\",\n    alt: \"Lista informativa\"\n  }), mdx(\"img\", {\n    src: \"/componentes/lista-informativa/lista-informativa-5.svg\",\n    alt: \"Lista informativa\"\n  })), mdx(\"h2\", {\n    \"id\": \"usabilidad\"\n  }, \"Usabilidad\"), mdx(\"h3\", {\n    \"id\": \"buenas-prácticas\"\n  }, \"Buenas pr\\xE1cticas\"), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"Utilizar listas informativas para piezas de informaci\\xF3n de texto que no tienen un orden secuencial. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"Utilizar listas de \\xEDtems con check para informar requisitos necesarios a la persona usuaria. Utilizar listas de \\xEDtems con vi\\xF1eta para dar informaci\\xF3n general sobre un tema. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"Se pueden incorporar enlaces de texto dentro de los \\xEDtems de una lista informativa en caso de ser necesario. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"Comenzar cada elemento de la lista con may\\xFAscula. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block do\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"Mantener la redacci\\xF3n del contenido de los \\xEDtems de forma consistente. Por ejemplo: siempre usar la misma voz y tono. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"h3\", {\n    \"id\": \"malas-prácticas\"\n  }, \"Malas pr\\xE1cticas\"), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No utilizar una lista informativa cuando se debe transmitir un orden secuencial de los elementos. Para este caso utilizar \", mdx(\"a\", _extends({\n    parentName: \"div\"\n  }, {\n    \"href\": \"https://gcba.github.io/estandares/componentes/listas/listas-de-pasos/\"\n  }), \"Lista de pasos\"), \". \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No utilizar variables bold dentro de los \\xEDtems de la lista para no agregar carga cognitiva a la persona usuaria. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No incorporar una lista dentro de una lista. Si es necesario separar la informaci\\xF3n del \\xEDtem en p\\xE1rrafos, utilizar una separaci\\xF3n entre p\\xE1rrafos (breakpoint). \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No cambiar los \\xEDconos de los \\xEDtems de lista. Siempre deben ser o una vi\\xF1eta o un check. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No combinar \\xEDtems con vi\\xF1etas y checks dentro de una misma lista. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No combinar listas informativas con listas de pasos. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))), mdx(\"div\", {\n    \"className\": \"custom-block dont\"\n  }, mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-heading\"\n  }), \"No utilizar listas con vi\\xF1etas si no hay m\\xE1s de 2 \\xEDtems. En ese caso utilizar un p\\xE1rrafo de texto. \"), mdx(\"div\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"custom-block-body\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#tipos-de-lista-informativa","title":"Tipos de lista informativa"},{"url":"#diseño-y-estructura-contexto-de-uso","title":"Diseño y estructura (contexto de uso)"},{"url":"#usabilidad","title":"Usabilidad"}]}}}}